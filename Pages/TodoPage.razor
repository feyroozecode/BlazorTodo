@page "/todo"


<PageTitle>Taches</PageTitle>

<h2> <b>Taches</b> (@todos.Count(todo => !todo.IsDone)) </h2>

<!-- Listes des taches -->
<ul>

   <input 
      style="padding: 10px; font-size: 16px;width: 60%;margin-right: 10px;"
      placeholder="Faire .." @bind="newTodo" />
      
   <button 
      style="background-color: purple; color: white; 
         padding: 10px;
         font-size: 16px;
         background-color:PURPLE;
         color: white;
         border: none;" 
      @onclick="AddTodo">Ajouter</button>

   @foreach (var item in todos) 
   {
    <ul style="list-style-type:none; margin-top: 20px; background-color: White; padding: 10px">
      <li style="list">
        <input
          type="checkbox" @bind="item.IsDone" />
        <span> @item.Title </span>
        
        <button 
            style="background-color: red; color: white; 
               padding: 1px;
               font-size: 16px;
               background-color:red;
               color: white;
               border: none;
               text-align: right;
               "
            @onclick="()=> DeleteTodo(newId)">Effacer</button>
    </li>
    <li>
           <span style="font-size:8px; color: grey; margin:0px">ID : @item.Id </span> 
    </li>
    </ul>
    }
</ul>


@code {
  private List<TodoItem> todos = new();

  private Guid newId;
  private string? newTodo;
  private TodoItem? item; 

  // add task; 
  private async Task AddTodo()
  {
      //HttpClient client = new HttpClient();
      //var response = await client.DeleteAsync("/api/todo/"+ newId);

     if(!string.IsNullOrWhiteSpace(newTodo) && newId != null)
     {
        newId = Guid.NewGuid();
        item = new TodoItem{ Id = newId, Title = newTodo} ;
        todos.Add(item);
        Console.Write("Todo with "+ newId.ToString()+ " added successfull");
        
        //reset vars
        newTodo = string.Empty;
     }
  }

  private async Task DeleteTodo(Guid id)
  {
    for(int i = todos.Count - 1; i>=0; i--){
      if(todos[i].Id == id){
         todos.RemoveAt(i);
         Console.Write("Item "+ newId + " Deleted successully");
      }
    }
  }

  private async Task getTime()
  {
   /*
   */
  }

}
